CREATE TABLE USER(	ID INT(6) NOT NULL AUTO_INCREMENT, IMIE VARCHAR(30), NAZWISKO VARCHAR(30), 
LOGIN VARCHAR(30), PASSWORD VARCHAR(30), CONSTRAINT PRIMARY KEY (ID));

INSERT INTO USER VALUES(1, 'MAREK', 'SZAFRANIEC', 'ADMIN', 'ADMIN');
INSERT INTO USER VALUES(2, 'HALINA', 'KOPICERA', 'HK', 'HK');
INSERT INTO USER VALUES(3, 'RENATA', 'BANASIK', 'RB', 'RB');
INSERT INTO USER VALUES(4, 'PIOTR', 'JANIK', 'PJ', 'PJ');

CREATE TABLE ROLA( ID INT(6) NOT NULL AUTO_INCREMENT, 
					USER_ID INT(6) NOT NULL,
					NAZWA VARCHAR(30),
					KOD VARCHAR(10) NOT NULL,
					PRZ BOOLEAN NOT NULL DEFAULT 0,
					AKT BOOLEAN NOT NULL DEFAULT 0,
					CONSTRAINT PRIMARY KEY (ID),
					CONSTRAINT FOREIGN KEY (USER_ID) REFERENCES USERS(ID));
INSERT INTO ROLA VALUES(1, 1, 'ADMINISTRATOR', 'ADMIN', 1, 1);

CREATE TABLE KIERUNEK(ID INT(6) NOT NULL AUTO_INCREMENT, NAZWA VARCHAR(30), ILOSC_SEM INT(6), CZESNE DECIMAL(11,2), CONSTRAINT PRIMARY KEY (ID));

INSERT INTO KIERUNEK VALUES(1, 'INFORMATYKA - I STOPNIA', 7, 404.52);
INSERT INTO KIERUNEK VALUES(2, 'INFORMATYKA - II STOPNIA', 3, 600.89);
INSERT INTO KIERUNEK VALUES(3, 'PSYCHOLOGIA - II STOPNIA', 10, 643.22);

CREATE TABLE STUDENT(ID INT(6) NOT NULL AUTO_INCREMENT, IMIE VARCHAR(30), NAZWISKO VARCHAR(30), DATA_UR DATE,ULICA VARCHAR(30),NR_DOMU INT(3),	NR_MIESZK INT(3),	MIASTO VARCHAR(30),	KOD_POCZT VARCHAR(30), EMAIL VARCHAR(30),	LOGIN VARCHAR(30),	PASS VARCHAR(30),	PLEC INT(1),	NR_ALBUMU INT(6),	PRIMARY KEY (ID));

INSERT INTO STUDENT VALUES(1, 'MAREK', 'SZAFRANIEC', '1986-08-05','HUTNICZA', 4, 5, 'SIEMIANOWICE SL', '41-100',  "", "", "", 0, 1);
INSERT INTO STUDENT VALUES(3, 'ADAM', 'MALYSZ', '1970-12-05','KATOWICKA', 40, null, 'ZAKOPANE', '35-500', "", "", "", 0, 10);
INSERT INTO STUDENT VALUES(4, 'ANIA', 'JAKAS', '1995-01-05','KWIATOWA', 4, 5, 'BYTOM', '99-200',  "", "", "", 1,20);

CREATE TABLE OKRES_ST(ID INT(6) NOT NULL AUTO_INCREMENT, KIERUNEK_ID INT(6), STUDENT_ID INT(6), DATA_OD DATE, DATA_DO DATE,	PRIMARY KEY (ID), FOREIGN KEY (KIERUNEK_ID) REFERENCES KIERUNEK(ID), FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID));


CREATE TABLE PRZEDMIOT(	ID INT(6) NOT NULL AUTO_INCREMENT, NAZWA VARCHAR(30), IL_WYK INT(6), IL_CW INT(6), PRIMARY KEY (ID));

INSERT INTO PRZEDMIOT VALUES(1, 'PROGRAMOWANIE OBIEKTOWE', 14, 14);
INSERT INTO PRZEDMIOT VALUES(2, 'PODSTAWY PROGRAMOWANIA', 10, 12);
INSERT INTO PRZEDMIOT VALUES(3, 'KOMPRESJA DANYCH', 10, 18);
INSERT INTO PRZEDMIOT VALUES(4, 'ANALIZA MATEMATYCZNA', 16, 10);

CREATE TABLE SEMESTR(ID INT(6) NOT NULL AUTO_INCREMENT, KIERUNEK_ID INT(6) NOT NULL, NUMER INT(2) NOT NULL, PRIMARY KEY (ID), FOREIGN KEY (KIERUNEK_ID) REFERENCES KIERUNEK(ID));
INSERT INTO SEMESTR VALUES(1, 1, 1);
INSERT INTO SEMESTR VALUES(2, 1, 2);
INSERT INTO SEMESTR VALUES(3, 1, 3);
INSERT INTO SEMESTR VALUES(4, 1, 4);
INSERT INTO SEMESTR VALUES(5, 1, 5);
INSERT INTO SEMESTR VALUES(6, 1, 6);
INSERT INTO SEMESTR VALUES(7, 1, 7);
INSERT INTO SEMESTR VALUES(8, 2, 1);
INSERT INTO SEMESTR VALUES(9, 2, 2);
INSERT INTO SEMESTR VALUES(10, 2, 3);
INSERT INTO SEMESTR VALUES(11, 2, 4);
INSERT INTO SEMESTR VALUES(12, 2, 5);
INSERT INTO SEMESTR VALUES(13, 2, 6);
INSERT INTO SEMESTR VALUES(14, 2, 7);

CREATE TABLE SEMESTR_PRZEDMIOT(SEMESTR_ID INT(6) NOT NULL, PRZEDMIOT_ID INT(6) NOT NULL, PRIMARY KEY (SEMESTR_ID, PRZEDMIOT_ID), FOREIGN KEY (SEMESTR_ID) REFERENCES SEMESTR(ID), FOREIGN KEY (PRZEDMIOT_ID) REFERENCES PRZEDMIOT(ID));
INSERT INTO SEMESTR_PRZEDMIOT VALUES(1,1);
INSERT INTO SEMESTR_PRZEDMIOT VALUES(1,2);
INSERT INTO SEMESTR_PRZEDMIOT VALUES(1,3);
INSERT INTO SEMESTR_PRZEDMIOT VALUES(1,4);
INSERT INTO SEMESTR_PRZEDMIOT VALUES(2,1);
INSERT INTO SEMESTR_PRZEDMIOT VALUES(2,2);
INSERT INTO SEMESTR_PRZEDMIOT VALUES(2,3);
INSERT INTO SEMESTR_PRZEDMIOT VALUES(2,4);


CREATE TABLE OCENA(	ID INT(6) NOT NULL AUTO_INCREMENT, PRZEDMIOT_ID INT(6) NOT NULL, STUDENT_ID INT(6) NOT NULL, OCENA DECIMAL(2,1), TYP_ID INT(1), PRIMARY KEY (ID), FOREIGN KEY (PRZEDMIOT_ID) REFERENCES PRZEDMIOT(ID), FOREIGN KEY (STUDENT_ID) REFERENCES STUDENCI(ID));

INSERT INTO OCENA VALUES(1, 1, 1, 5.0, 0);
INSERT INTO OCENA VALUES(2, 1, 1, 4.5, 0);
INSERT INTO OCENA VALUES(3, 1, 1, 5.0, 1);
INSERT INTO OCENA VALUES(4, 2, 1, 4.0, 0);
INSERT INTO OCENA VALUES(5, 2, 1, 4.5, 0);
INSERT INTO OCENA VALUES(6, 2, 1, 4.5, 1);
INSERT INTO OCENA VALUES(7, 1, 2, 5.0, 0);
INSERT INTO OCENA VALUES(8, 1, 2, 4.5, 0);
INSERT INTO OCENA VALUES(9, 1, 2, 5.0, 1);
INSERT INTO OCENA VALUES(10, 2, 2, 4.0, 0);
INSERT INTO OCENA VALUES(11, 2, 2, 4.5, 0);
INSERT INTO OCENA VALUES(12, 2, 2, 4.5, 1);

create or replace view vi_przychod_koszt as select   a.rok, a.mc, CASE  a.mc WHEN 1 THEN  'Styczeń' WHEN 2 THEN  'Luty' WHEN 3 THEN  'Marzec' WHEN 4 THEN  'Kwiecień' WHEN 5 THEN  'Maj' WHEN 6 THEN  'Czerwiec' WHEN 7 THEN  'Lipiec' WHEN 8 THEN  'Sierpień' WHEN 9 THEN  'Wrzesień' WHEN 10 THEN  'Październik' WHEN 11 THEN  'Listopad' ELSE 'Grudzień' END AS miesieac , c.nazwa kierunke,  b.przychod, a.koszt_wykladw koszt , b.przychod - a.koszt_wykladw dochod, b.koszt_na_st from vi_koszt a join vi_przychod b on b.rok= a.rok and b.mc = a.mc and a.kierunek_id =  b.kierunek join kierunek c on c.id = a.kierunek_id; 

	
	  create view vi_przychod as select rok, mc ,kierunek.id kierunek ,
	  count(student_id) il_stud, count(student_id) * (czesne / 6) przychod,
	  count(student_id) * 3.25 koszt_na_st from okres_sym join okres_st on
	  rok_mc between EXTRACT(YEAR_MONTH FROM data_od) and EXTRACT(YEAR_MONTH
	  FROM data_do) join kierunek on okres_st.kierunek_id = kierunek.id group
	  by rok, mc ,kierunek.id;
	  
	  create or replace view vi_kierunek as select distinct kierunek_id
	  kierunek , data_od, data_do from okres_st;
	  
	  create or replace view vi_koszt as select distinct rok, mc
	  ,vi_kierunek.kierunek kierunek_, data_od, sum(il_wyk/ 6) * 40
	  koszt_wykladw from okres_sym join vi_kierunek on rok_mc between
	  EXTRACT(YEAR_MONTH FROM data_od) and EXTRACT(YEAR_MONTH FROM data_do)
	  join semestr on semestr.kierunek_id = vi_kierunek.kierunek join
	  semestr_przedmiot on semestr.id = semestr_przedmiot.semestr_id join
	  przedmiot on przedmiot.id = semestr_przedmiot.przedmiot_id where rok_mc
	  between EXTRACT(YEAR_MONTH FROM DATE_ADD(data_od, INTERVAL (numer -1)*6
	  MONTH)) and EXTRACT(YEAR_MONTH FROM DATE_ADD(data_od, INTERVAL numer*6
	  MONTH)) group by rok, mc ,kierunek , data_od order by 1 ,2,3,4;
